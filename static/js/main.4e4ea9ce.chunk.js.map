{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","id","classNames","completed","title","TodoList","todos","map","username","getUserId","usersFromServer","find","person","todosWithUser","userId","getMaxId","ids","Math","max","App","useState","setTodos","todoTitle","setTodoTitle","todoUserId","setTodoUserId","titleError","setTitleError","userIdError","setUserIdError","action","method","onSubmit","event","preventDefault","newTodo","trim","prevTodos","htmlFor","type","placeholder","value","onChange","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4e4ea9ce.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ninterface Props {\n  user: User\n}\n\nexport const UserInfo:React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id={todo.id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {todo.title}\n      </h2>\n      {todo.user && <UserInfo user={todo.user} />}\n    </article>\n  );\n};\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[]\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\n\nfunction getUserId(id: number) {\n  return usersFromServer.find(person => id === person.id);\n}\n\nconst todosWithUser = todosFromServer.map(todo => {\n  const user = getUserId(todo.userId);\n\n  return {\n    ...todo,\n    user,\n  };\n});\n\nfunction getMaxId(todos: Todo[]) {\n  const ids = todos.map(todo => todo.id);\n  const newId = Math.max(...ids) + 1;\n\n  return newId;\n}\n\nexport const App = () => {\n  const [todos, setTodos] = useState(todosWithUser);\n  const [todoTitle, setTodoTitle] = useState('');\n  const [todoUserId, setTodoUserId] = useState('0');\n  const [titleError, setTitleError] = useState(false);\n  const [userIdError, setUserIdError] = useState(false);\n\n  function formReset() {\n    setTodoTitle('');\n    setTodoUserId('0');\n  }\n\n  function handleSubmitErrors() {\n    if (!todoTitle.trim()) {\n      setTitleError(true);\n    }\n\n    if (!+todoUserId) {\n      setUserIdError(true);\n    }\n  }\n\n  function handleTitleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setTodoTitle(event.target.value);\n    if (titleError) {\n      setTitleError(false);\n    }\n  }\n\n  function handleUserIdChange(event: React.ChangeEvent<HTMLSelectElement>) {\n    setTodoUserId(event.target.value);\n    if (userIdError) {\n      setUserIdError(false);\n    }\n  }\n\n  function handleSubmit(event: React.FormEvent) {\n    event.preventDefault();\n\n    const user = getUserId(+todoUserId);\n\n    const newTodo = {\n      id: getMaxId(todos),\n      title: todoTitle,\n      completed: false,\n      userId: +todoUserId,\n      user,\n    };\n\n    handleSubmitErrors();\n\n    if (!todoTitle.trim() || !+todoUserId) {\n      return;\n    }\n\n    setTodos(prevTodos => [...prevTodos, newTodo]);\n\n    formReset();\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"todoTitle\">Title: </label>\n          <input\n            type=\"text\"\n            id=\"todoTitle\"\n            data-cy=\"titleInput\"\n            name=\"todoTitle\"\n            placeholder=\"Enter a title\"\n            value={todoTitle}\n            onChange={handleTitleChange}\n          />\n          {titleError\n            && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"todoUserId\">User: </label>\n          <select\n            data-cy=\"userSelect\"\n            id=\"todoUserId\"\n            name=\"todoUserId\"\n            value={todoUserId}\n            onChange={handleUserIdChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {userIdError\n            && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}